// Place all the styles related to the welcome controller here.
// They will automatically be included in application.css.
// You can use Sass (SCSS) here: http://sass-lang.com/

@import 'reset';
/*@import url(http://fonts.googleapis.com/css?family=Playfair+Display:400,400italic,bold&subset=latin,cyrillic);*/

$font-stack: Roboto, 'Helvetica Neue', Helvetica, Arial, sans-serif; // 'PT Sans Caption',

$bg-color: #fdfdfd; // #159588;
$fg-color: #666;
$default-margin: 15px 30px;
$mobile-margin: 15px 20px;
$link: #4D92E0; // blue
$link-half: rgba(255, 45, 85, .5); // half of red

* {-webkit-font-smoothing:subpixel-antialiased;}

html, body, {
  box-shadow: none;
  color: #666;
  font-family: $font-stack;
  font-size: 14px;
  line-height: 140%;
  margin: 0px;
  padding: 0px;
  width: 100%;
  height: 100%;

  text-rendering: optimizeLegibility;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  text-size-adjust: 100%;
}

.container {
  display: -webkit-flex;
  display: flex;
  /*overflow-y: hidden;*/
  height: 100%;
  width: 100%;
}

nav {
  max-width: 410px;
  min-width: 300px;

  overflow: scroll;

  position: relative;
  -webkit-flex: 1;
          flex: 1;

          box-sizing: border-box;
     -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;

  -webkit-box-shadow: -1px 0px 0px 0px rgba(0, 0, 0, 0.05);
     -moz-box-shadow: -1px 0px 0px 0px rgba(0, 0, 0, 0.05);
          box-shadow: -1px 0px 0px 0px rgba(0, 0, 0, 0.05);
}

.map {
  -webkit-flex: 2;
          flex: 2;
}

.gm-style {
  bottom: -30px;
  height: auto !important;
}

h1 {
  font-size: 24px;
  font-weight: bold;
  margin: $default-margin;
  margin-top: 30px;
  text-align: center;
}

h2 {
  margin: $default-margin;
  text-align: center;
}

h3 {
  font-size: 12px;
  /*font-weight: bold;*/
  letter-spacing: .2em;
  margin: $default-margin;
  margin-bottom: 0;
  text-align: center;
  text-transform: uppercase;
}

strong, b {
  font-weight: 500;
}

p {
  color: #999;
  /*margin: 8px 15px;*/
  margin: $default-margin;
  /*text-align: center;*/
}

p.app {
  margin-bottom: 25px;
}

strong {
  font-weight: bold;
}

p.app strong, p.app strong a {
  color: #666;
}

.to-left {
  display: inline-block;
  float: left;
  text-align: left;
}

.to-center {
  text-align: center;
}

.to-right {
  display: inline-block;
  /*float: right;*/
}

.stars {
  color: gold;
}

.stars .not-gold {
  color: white;
  -webkit-text-stroke: 1px #eee;
}

span.nbsp {
  white-space: nowrap;
}

.eof { /* social icon-links */
  /*margin: 25px 15px;*/
  font-size: 16px;
  text-align: center;
  word-spacing: 0;
  a, a:visited {
    padding: 5px;
    color: #ccc;
    text-decoration: none;
  }
  a:hover {
    /*color: #666;*/
    color: $link;
  }
}

/*
.icon {
  display: inline;
  fill: #ccc;
}

.icon:hover {
  fill: #ff2d55;
}
*/

.likely-wrapper {
  display: block;
  padding: 5px 0;
  position: absolute;

  bottom: 0;
  left: 0;
  right: 0;

  text-align: center;
  width: 100%;

background: -moz-linear-gradient(top, rgba(255,255,255,0) 0%, rgba(255,255,255,1) 40%);
background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(255,255,255,0)), color-stop(40%,rgba(255,255,255,1)));
background: -webkit-linear-gradient(top, rgba(255,255,255,0) 0%,rgba(255,255,255,1) 40%);
background: -o-linear-gradient(top, rgba(255,255,255,0) 0%,rgba(255,255,255,1) 40%);
background: -ms-linear-gradient(top, rgba(255,255,255,0) 0%,rgba(255,255,255,1) 40%);
background: linear-gradient(to bottom, rgba(255,255,255,0) 0%,rgba(255,255,255,1) 40%);
// filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#00ffffff', endColorstr='#ffffff',GradientType=0 );

  div {
    margin: 0 3px 6px 3px !important;
  }
}



a, a:visited {
  color: $link;
  text-decoration: none;
}

a:hover, a.hover { /* birman hover */
  color: #ff2d55;
  text-decoration: underline;
}

a.appstore {
  border: 1px solid white;
  border-radius: 10px;
  padding: 1px  6px;
  margin: -1px -6px;
  margin-left: -7px;
}

a.appstore.hover { /* birman hover */
  text-decoration: none;
}

a.appstore:hover {
  border: 1px solid $link-half;
  /*border-color: #ff2d55;*/
  text-decoration: none;

  -webkit-background-clip: padding-box; /* for Safari */
  background-clip: padding-box; /* for IE9+, Firefox 4+, Opera, Chrome */
}

.gm-style-iw {
  overflow: visible !important;
  white-space: nowrap;
}

@media (max-width: 500px) {
  .container {
    -webkit-flex: none;
            flex: none;
  }
  .map {
    width: 100%;
    height: 40%;
    -webkit-flex: none;
            flex: none;
  }
  nav {
    position: absolute;
    left: 0;
    top: 40%;

    max-width: none;
    min-height: 100%;

    -webkit-flex: none;
            flex: none;
  }
  p {
    margin: $mobile-margin;
  }
  .likely-wrapper {
    display: none;
    position: relative;
  }
}







/* make keyframes that tell the start state and the end state of our object */
@-webkit-keyframes fadeIn { from { opacity:0; } to { opacity:1; } }
@-moz-keyframes fadeIn { from { opacity:0; } to { opacity:1; } }
@keyframes fadeIn { from { opacity:0; } to { opacity:1; } }

.fade-in {
  opacity:0;  /* make things invisible upon start */
  -webkit-animation: fadeIn ease-out 1;  /* call our keyframe named fadeIn, use animattion ease-in and repeat it only 1 time */
     -moz-animation: fadeIn ease-out 1;
          animation: fadeIn ease-out 1;

  -webkit-animation-fill-mode: forwards;  /* this makes sure that after animation is done we remain at the last keyframe value (opacity: 1)*/
     -moz-animation-fill-mode: forwards;
          animation-fill-mode: forwards;

  -webkit-animation-duration: 0.7s;
     -moz-animation-duration: 0.7s;
          animation-duration: 0.7s;
}

.fade-in.one {
  -webkit-animation-delay: 0.1s;
     -moz-animation-delay: 0.1s;
          animation-delay: 0.1s;
}

.fade-in.two {
  -webkit-animation-delay: 1.0s;
     -moz-animation-delay: 1.0s;
          animation-delay: 1.0s;
}

.fade-in.three {
  -webkit-animation-delay: 1.5s;
     -moz-animation-delay: 1.5s;
          animation-delay: 1.5s;
}









// map
.cluster{ position:relative; z-index:10; font:bold 14px/30px 'Roboto', 'Helvetica', sans-serif; color:#fff; background:url(/images/map/marker_cluster.svg) no-repeat 50%; background-size:cover; text-align:center; }
.cluster1{ width:30px; height:30px; }
.cluster2{ width:35px; height:35px; font-size:15px; line-height:35px; }
.cluster3{ width:40px; height:40px; font-size:16px; line-height:40px; }
.tooltip{ position:relative; z-index:1; width:160px; font:13px 'Roboto', 'Helvetica', sans-serif; color:#333; text-align:center; opacity:0; transform:translate(0, -20px); transition:.3s; }
.tooltip.show{ transform:translate(0, 0); opacity:1; }
.tooltip div{ position:absolute; left:0; right:0; bottom:0; }
.tooltip span{ position:relative; display:inline-block; padding:5px 10px; border-radius:4px; background:rgba(255,255,255,1.0); box-shadow:0 0 3px rgba(0,0,0,.3); }
.tooltip span:before{ content:''; position:absolute; left:50%; top:100%; margin:0 -6px; border:6px solid transparent; border-top-color:rgba(0,0,0,.1); }
.tooltip span:after{ content:''; position:absolute; left:50%; top:100%; margin:0 -5px; border:5px solid transparent; border-top-color:rgba(255,255,255,.9); }













/*iPhone 6 Portrait*/
@media only screen and (min-device-width: 375px) and (max-device-width: 667px) and (orientation : portrait) {
}

/*iPhone 6 landscape*/
@media only screen and (min-device-width: 375px) and (max-device-width: 667px) and (orientation : landscape) {
}

/*iPhone 6+ Portrait*/
@media only screen and (min-device-width: 414px) and (max-device-width: 736px) and (orientation : portrait) {
}

/*iPhone 6+ landscape*/
@media only screen and (min-device-width: 414px) and (max-device-width: 736px) and (orientation : landscape) {
}

/*iPhone 6 and iPhone 6+ portrait and landscape*/
@media only screen and (max-device-width: 640px), only screen and (max-device-width: 667px), only screen and (max-width: 480px){
  .likely-wrapper {
    display: none;
    position: relative;
  }
}

/*iPhone 6 and iPhone 6+ portrait*/
@media only screen and (max-device-width: 640px), only screen and (max-device-width: 667px), only screen and (max-width: 480px) and (orientation : portrait){
}

/*iPhone 6 and iPhone 6+ landscape*/
@media only screen and (max-device-width: 640px), only screen and (max-device-width: 667px), only screen and (max-width: 480px) and (orientation : landscape){
}
